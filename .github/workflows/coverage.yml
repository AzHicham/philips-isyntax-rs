name: Coverage

on:
  pull_request:
  push:
    branches:
      - main
      - develop

env:
  CARGO_TERM_COLOR: always
  RUST_VERSION: 1.73.0

jobs:
  coverage:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4 # v4
      - name: Cache sample slide
        id: cache-slide
        uses: actions/cache@v4
        with:
          path: tests/data/
          key: slides-test
      - name: Cache SDK
        id: cache-sdk
        uses: actions/cache@v4
        with:
          path: /tmp/sdk/
          key: cache-sdk
      - name: Google Storage authentication
        if: ${{ steps.cache-slide.outputs.cache-hit != 'true' || steps.cache-sdk.outputs.cache-hit != 'true' }}
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
          export_environment_variables: true
          create_credentials_file: true
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        if: ${{ steps.cache-slide.outputs.cache-hit != 'true' || steps.cache-sdk.outputs.cache-hit != 'true' }}
      - name: Download sample tests data
        if: steps.cache-slide.outputs.cache-hit != 'true'
        run: make dl-test-images
      - name: Download dependencies
        if: steps.cache-sdk.outputs.cache-hit != 'true'
        run: make dl-sdk
      - name: Install dependencies
        run: make install-deps
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - name: Install llvm-cov & Build & Tests
        run: |
          rustup component add llvm-tools-preview
          cargo install cargo-llvm-cov
          cargo llvm-cov clean --workspace # remove artifacts that may affect the coverage results
          cargo llvm-cov --no-report --workspace
          cargo llvm-cov --no-run --workspace --lcov --output-path lcov.info
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          name: codecov-philips-isyntax-rs # optional
          verbose: true # optional (default = false)
